# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test Server CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  define_env:
    runs-on: ubuntu-latest
    env:
      BASE_NAME: teamup-backend-test
      DOCKER_HOST: ccr.ccs.tencentyun.com
      DOCKER_NAMESPACE: ziqiang
      DOCKER_COMPOSE_FILE: docker-compose-test.yml

    outputs:
      DOCKER_HOST: ${{ steps.set_env.outputs.DOCKER_HOST }}
      DOCKER_NAMESPACE: ${{ steps.set_env.outputs.DOCKER_NAMESPACE }}
      IMAGE_NAME: ${{ steps.set_env.outputs.IMAGE_NAME }}
      WORKING_DIR: ${{ steps.set_env.outputs.WORKING_DIR }}
      DOCKER_COMPOSE_FILE: ${{ steps.set_env.outputs.DOCKER_COMPOSE_FILE }}
    steps:
      - id: set_env
        run: |
          echo "BASE_NAME=${{ env.BASE_NAME }}" >> $GITHUB_ENV
          echo "DOCKER_HOST=${{ env.DOCKER_HOST }}" >> $GITHUB_OUTPUT
          echo "DOCKER_NAMESPACE=${{ env.DOCKER_NAMESPACE }}" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=~/${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT
          echo "WORKING_DIR=~/${{ env.BASE_NAME }}" >> $GITHUB_OUTPUT
          echo "DOCKER_COMPOSE_FILE=${{ env.DOCKER_COMPOSE_FILE }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs:
      - define_env
    strategy:
      matrix:
        image: [ 'redis', 'spring' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: gradle

      - name: Build Spring project
        run: |
          gradle buildDevJar


      - name: Using cache for docker
        uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: docker-layer-caching-${{ github.workflow }}-${{ matrix.image }}-{hash}
          restore-keys: |
            docker-layer-caching-${{ github.workflow }}-${{ matrix.image }}-

      - name: build and push docker image ${{ matrix.image }}
        run: |
          docker login ${{ needs.define_env.outputs.DOCKER_HOST }} --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
          docker build -f docker/${{ matrix.image }}/Dockerfile -t ${{ needs.define_env.outputs.DOCKER_HOST }}/${{ needs.define_env.outputs.DOCKER_NAMESPACE }}/${{ needs.define_env.outputs.IMAGE_NAME }}:${{ matrix.image }} .
          docker push ${{ needs.define_env.outputs.DOCKER_HOST }}/${{ needs.define_env.outputs.DOCKER_NAMESPACE }}/${{ needs.define_env.outputs.IMAGE_NAME }}:${{ matrix.image }}
          docker image prune -f
  deploy:
    runs-on: ubuntu-latest
    needs:
      - define_env
      - build
    steps:
      - name: Turn down docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            mkdir -p ${{ needs.define_env.outputs.WORKING_DIR }}
            cd ${{ needs.define_env.outputs.WORKING_DIR }}
            if [ -f docker-compose.yml ]; then
              docker login ${{ needs.define_env.outputs.DOCKER_HOST }} --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
              docker-compose pull
              docker-compose down
            fi

      - name: Update docker compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: ./docker/${{ needs.define_env.outputs.DOCKER_COMPOSE_FILE }}
          target: ${{ needs.define_env.outputs.WORKING_DIR }}

      - name: Rename docker compose file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ needs.define_env.outputs.WORKING_DIR }}
            mv ${{ needs.define_env.outputs.DOCKER_COMPOSE_FILE }} docker-compose.yml

      - name: Restart docker compose containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ needs.define_env.outputs.WORKING_DIR }}
            docker login ${{ needs.define_env.outputs.DOCKER_HOST }} --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
            docker-compose pull
            docker-compose up -d --remove-orphans
            docker image prune -f