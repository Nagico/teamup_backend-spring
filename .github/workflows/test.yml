# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test Server CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  JOB_NAME: teamup-backend-test

  DOCKER_HOST: ccr.ccs.tencentyun.com
  DOCKER_NAMESPACE: ziqiang
  IMAGE_NAME: {{ JOB_NAME }}

  WORKING_DIR: ~/{{ JOB_NAME }}
  DOCKER_COMPOSE_FILE: docker-compose-test.yml

  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  SSH_HOST: ${{ secrets.TEST_SSH_HOST }}
  SSH_USERNAME: ${{ secrets.TEST_SSH_USERNAME }}
  SSH_PASSWORD: ${{ secrets.TEST_SSH_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [ 'redis', 'spring' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: gradle

      - name: Build Spring project
        run: |
          gradle buildDevJar


      - name: Using cache for docker
        uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: docker-layer-caching-${{ github.workflow }}-${{ matrix.image }}-{hash}
          restore-keys: |
            docker-layer-caching-${{ github.workflow }}-${{ matrix.image }}-

      - name: build and push docker image ${{ matrix.image }}
        run: |
          docker login {{ DOCKER_HOST }} --username=${{ DOCKER_USERNAME }} --password=${{ DOCKER_PASSWORD }}
          docker build -f docker/${{ matrix.image }}/Dockerfile -t {{ DOCKER_HOST }}/{{ DOCKER_NAMESPACE }}/{{ IMAGE_NAME }}:${{ matrix.image }} .
          docker push {{ DOCKER_HOST }}/{{ DOCKER_NAMESPACE }}/{{ IMAGE_NAME }}:${{ matrix.image }}
          docker image prune -f
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Turn down docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ SSH_HOST }}
          username: ${{ SSH_USERNAME }}
          password: ${{ SSH_PASSWORD }}
          script: |
            mkdir -p {{ WORKING_DIR }}
            cd {{ WORKING_DIR }}
            if [ -f docker-compose.yml ]; then
              docker login {{ DOCKER_HOST }} --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
              docker-compose pull
              docker-compose down
            fi

      - name: Update docker compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ SSH_HOST }}
          username: ${{ SSH_USERNAME }}
          password: ${{ SSH_PASSWORD }}
          source: ./docker/{{ DOCKER_COMPOSE_FILE }}
          target: {{ WORKING_DIR }}

      - name: Rename docker compose file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ SSH_HOST }}
          username: ${{ SSH_USERNAME }}
          password: ${{ SSH_PASSWORD }}
          script: |
            cd {{ WORKING_DIR }}
            mv {{ DOCKER_COMPOSE_FILE }} docker-compose.yml

      - name: Restart docker compose containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ SSH_HOST }}
          username: ${{ SSH_USERNAME }}
          password: ${{ SSH_PASSWORD }}
          script: |
            cd {{ WORKING_DIR }}
            docker login {{ DOCKER_HOST }} --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
            docker-compose pull
            docker-compose up -d --remove-orphans
            docker image prune -f